# HTTP to HTTPS 리다이렉트
server {
    listen 80;
    server_name worker.stockholmes.store;
    return 301 https://$server_name$request_uri;
}

# HTTPS 서버 설정
server {
    listen 443 ssl;
    server_name worker.stockholmes.store;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/worker.stockholmes.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/worker.stockholmes.store/privkey.pem;

    # SSL 설정 최적화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # WMS 정적 파일 서빙
    root /home/ec2-user/frontend/worker/dist;
    autoindex off;

    location / {
        try_files $uri $uri/ /index.html =404;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header 'Access-Control-Allow-Origin' 'https://worker.stockholmes.store' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
    }

    # 정적 파일 캐싱 설정
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # API 프록시 설정
    location /api {
        proxy_pass https://api.stockholmes.store;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 헤더
        add_header 'Access-Control-Allow-Origin' 'https://worker.stockholmes.store' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Health check
    location /health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}